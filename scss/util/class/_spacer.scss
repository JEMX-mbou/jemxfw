@use '../../config/size';
@use '../../config/side';
@use '../../config/spacer';

@use '../function/css';
// .#{css.classname((mx, 0))} {
//   background-color: red;
// }


// For loop to generate spacerclasses runs X amount of times based on spacer amount in config/_size.scss
@for $num from 0 through 2 {//size.space('amount') {

  // Foreach loops based on spacer types (config/spacer)
  @each $typePref, $type in spacer.type() {
    //$typePref: unquote($typePref);
    // Foreach loops based on spacer sides (config/side)
    @each $sidePref, $side in side.get() {

      // Spacer classname generated by classname function (util/function/css);
      $classname: css.classname((#{$typePref}#{$sidePref}, $num));

      // Spacer value is calculated based on base size and rounded to 1 decimal.
      $spaceVal: calc(round(($num * size.space('size')) * 10) / 10);

      // Generates the spacer classes with the properties and values.
      .#{$classname} {
        @if $sidePref == 'y' { // Vertical spacer
          #{css.property(($type, 'top'))}: #{$spaceVal};
          #{css.property(($type, 'bottom'))}: #{$spaceVal};
        } @else if $sidePref == 'x' { // Horizontal spacer
          #{css.property(($type, 'right'))}: #{$spaceVal};
          #{css.property(($type, 'left'))}: #{$spaceVal};
        } @else if $side { // Single side spacer
          #{css.property(($type, $side))}: #{$spaceVal};
        } @else {
          #{css.property(($type, $side))}: #{$spaceVal};
        }
      }
    }
  }
}
